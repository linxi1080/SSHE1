<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE struts PUBLIC 
	"-//Apache Software Foundation//DTD Struts Configuration 2.3//EN" 
	"http://struts.apache.org/dtds/struts-2.3.dtd">
<struts>

	<!-- 指定由spring负责action对象的创建 -->
	<constant name="struts.objectFactory" value="spring" />
	<!-- 所有匹配*.action的请求都由struts2处理 -->
	<constant name="struts.action.extension" value="do,action,lh" />
	<!--
	作用：设置 不需要执行的 action的pattern(以JDK自带的正则表达式作匹配)，以逗号分隔
	 这个struts常量的作用就是针对正则表达式所匹配到的路径，
	1.struts解析xml时，不会把这些路径放到ActionMapping中；
	2.请求时也不用去struts的ActionMapping中进行匹配，执行。
	3.而是直接跳过此过滤器进入下一个过滤器。
	特别要注意的是：struts.action.excludePattern的值是用逗号（，）隔开的正则表达式。
	比如：/res/.* 表示以/res/为开头的路径。
	.* 表示零个或多个任意字符
	<constant name="struts.action.excludePattern" value="/res/.*,/css/.*,/images/.*,/js/.*,/services/.*" />
	/nofilter/verifyCodeAction
	-->
	<!--
	<constant name="struts.action.excludePattern" value="/nofilter/.*" />
	-->
	<!-- 是否启用开发模式 -->
	<constant name="struts.devMode" value="true" />
	<!-- struts配置文件改动后，是否重新加载 -->
	<constant name="struts.configuration.xml.reload" value="true" />
	<!-- 设置浏览器是否缓存静态内容 -->
	<constant name="struts.serve.static.browserCache" value="false" />
	<!-- 请求参数的编码方式 -->
	<constant name="struts.i18n.encoding" value="utf-8" />
	<!-- 每次HTTP请求系统都重新加载资源文件，有助于开发 -->
	<constant name="struts.i18n.reload" value="true" />
	<!-- 文件上传最大值 -->
	<constant name="struts.multipart.maxSize" value="104857600" />
	<!-- 让struts2支持动态方法调用 -->
	<constant name="struts.enable.DynamicMethodInvocation" value="true" />
	<!-- Action名称中是否还是用斜线 -->
	<constant name="struts.enable.SlashesInActionNames" value="false" />
	<!-- 允许标签中使用表达式语法 -->
	<constant name="struts.tag.altSyntax" value="true" />
	<!-- 对于WebLogic,Orion,OC4J此属性应该设置成true -->
	<constant name="struts.dispatcher.parametersWorkaround" value="false" />
	<!-- struts.multipart.saveDir配置 -->
	<constant name="struts.multipart.saveDir" value="/tmp"/>
	<!-- :指定除插件本身默认的搜索action、actions、struts、struts2包以外的其它包 
	<constant name="struts.convention.action.packages" value="lh.action,lh.adminshop" />
	-->
	
	<!-- <package name="default" namespace="/" extends="struts-default"> -->
	<package name="basePackage" namespace="/" extends="struts-default">
	    <interceptors>
	    <!-- session拦截器 -->
		<interceptor name="sessionInterceptor" class="lh.interceptor.SessionInterceptor" />
		<interceptor-stack name="sessionStack">
			<interceptor-ref name="sessionInterceptor" >
				<!-- doNotNeedSessionAndSecurity_ 开头的和doNotNeedSession_ 开头的方法不拦截 -->
				<param name="excludeMethods">login*,logout*,doNotNeedGrant_*</param>
			</interceptor-ref>
		</interceptor-stack>
	    <!-- 权限拦截器 -->
		<interceptor name="securityInterceptor" class="lh.interceptor.SecurityInterceptor" />
			<interceptor-stack name="securityStack">
				<interceptor-ref name="sessionStack"></interceptor-ref>
				<interceptor-ref name="securityInterceptor">
					 <!-- 设置需要拦截的方法，多个以逗号隔开 -->
				     <!--
					 <param name="includeMethods">getALL,getPart,listUser</param> 
					 -->
				    <!-- login开头和get开头的方法不拦截  -->
				    <!-- 注意要在同一个包下  basePackage-->
				    <!-- get*,login*,find*,edit*,add*,logout*, -->
					<param name="excludeMethods">login*,logout*,doNotNeedGrant_*</param>
					<!-- login*,get*,find*,edit* -->
				</interceptor-ref>
				<interceptor-ref name="defaultStack"></interceptor-ref>
			</interceptor-stack>
		</interceptors>
		<!-- 全局拦截器栈 -->
		<default-interceptor-ref name="securityStack"></default-interceptor-ref>
	    <!-- 好像这个拦截器不配置也可以 -->
	    <!--  
		<interceptors>
		-->
			<!-- 字符集拦截器 -->
			<!--
			<interceptor name="encodingInterceptor" class="lh.interceptor.EncodingInterceptor" />
			<interceptor-stack name="encodingStack">
				<interceptor-ref name="defaultStack"></interceptor-ref>
				<interceptor-ref name="encodingInterceptor"></interceptor-ref>
			</interceptor-stack>
		</interceptors>
		-->
		<!-- 全局拦截器栈 -->
		<!--  
		<default-interceptor-ref name="encodingStack"></default-interceptor-ref>
		-->
		<global-results>
			<!-- 没有session -->
			<result name="noSession">/jsps/error/noSession.jsp</result>
			<!-- 没有权限 -->
			<result name="noSecurity">/jsps/error/noSecurity.jsp</result>
			<!-- struts抛异常 -->
			<result name="strutsException">/jsps/error/strutsException.jsp</result>
		</global-results>

		<global-exception-mappings>
			<exception-mapping result="strutsException" exception="java.lang.Exception"></exception-mapping>
		</global-exception-mappings>
	</package>
	<!-- 
	<package name="noBasePackage" namespace="/" extends="struts-default">
	    <interceptors>
			<interceptor-stack name="defaultStack">
				<interceptor-ref name="defaultStack"></interceptor-ref>
			</interceptor-stack>
		</interceptors>
		<default-interceptor-ref name="defaultStack"></default-interceptor-ref>
		<global-exception-mappings>
			<exception-mapping result="strutsException" exception="java.lang.Exception"></exception-mapping>
		</global-exception-mappings>
	</package>
	-->
	<!--商家-->
	<include file="struts-shop.xml" />
	<!--管理员-->
	<include file="struts-adminshop.xml" />
	<!--会员用户-->
	<include file="struts-order.xml" />
	<!--公共的-->
	<include file="struts-public.xml" />
</struts>